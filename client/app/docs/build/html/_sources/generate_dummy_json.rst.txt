Genrate Dummy Json
====================


Dummy  is a  utility that allows you to generate random JSON data using Handlebars templates. It comes with a built-in collection of Handlebars helpers that return common data values, such as names, numbers, dates, and also allows you to write your own.
It comes with a built-in collection of Handlebars helpers that return common data values, such as names, numbers, dates.


Available helpers
~~~~~~~~~~~~~~~~~~

+++++++++++
Repeat
+++++++++++

```{{#repeat count [comma=true]}} ... {{/repeat}}```

* `count` The number of times to repeat the content (required)
* `comma` Adds or removes the separating comma between blocks of content (optional, default is true)

Repeats blocks of content, similar to Handlebars built-in `each`. 
Can be used anywhere in your template, not just inside arrays. 
Automatically adds a comma and line break between blocks


.. code:: js

   // Repeat the block 3 times, automatically adding a comma between blocks
   var messages = [
     {{#repeat 3}}
     "hello"
     {{/repeat}}
   ];

   // Output
   var messages = [
     "hello",
     "hello",
     "hello"
   ];



You can omit the comma and line break by using ``comma=false``, for
example:

.. code:: js

   {{#repeat 3 comma=false}}hello{{/repeat}} // hellohellohello

You can get the iteration position using the standard Handlebars
variables ``@index``, ``@first``, ``@last``. The total number of
iterations is available using ``@total``.

.. code:: js

   // Repeat the block 3 times using @index to modify the filename
   {{#repeat 3}}
   "img{{@index}}.png"
   {{/repeat}}

   // Output
   "img0.png",
   "img1.png",
   "img2.png"

Integer
~~~~~~~

``{{int min max [format] [round=1]}}``

-  ``min`` Minimum value (required)
-  ``max`` Maximum value (required)
-  ``format`` Formatting string (optional, default is null)
-  ``round`` Rounds to the nearest multiple of the given value
   (optional, default is null - no rounding)

Generates a random integer from ``min`` (inclusive) up to and including
``max`` (inclusive). The optional ``round`` parameter will round the
number to the nearest multiple of the given value.

The output can be formatted using a numeric format string, provided by
numbro. For a complete list of formatting options see
http://numbrojs.com/format.html.

.. code:: js

   // Generates a random integer between 0 and 100
   {{int 0 100}} // 43

   // Rounds the random integer to the nearest multiple of 5
   {{int 0 100 round=5}} // 65

   // Formats the random integer using numbro
   {{int 10000 50000 '0,0.00'}} // 23,462.00

Float
~~~~~


``{{float min max [format] [round=1]}}``

-  ``min`` Minimum value (required)
-  ``max`` Maximum value (required)
-  ``format`` Formatting string (optional, default is null)
-  ``round`` Rounds to the nearest multiple of the given value
   (optional, default is null - no rounding)

Generates a random floating point number from ``min`` (inclusive) up to
but excluding ``max`` (exclusive). The optional ``round`` parameter will
round the number to the nearest multiple of the given value.

The output can be formatted using a numeric format string, provided by
numbro. For a complete list of formatting options see
http://numbrojs.com/format.html.

.. code:: js

   // Generates a random float between 0 and 1
   {{float 0 1}} // 0.4319351462490857

   // Rounds the random float to the nearest multiple of 0.1
   {{float 0 1 round=0.1}} // 0.4

   // Formats the random float using numbro
   {{float 10000 50000 '0,0.00'}} // 33,127.39

Date
~~~~

``{{date min max [format]}}``

-  ``min`` Minimum value (required)
-  ``max`` Maximum value (required)
-  ``format`` Formatting string 
    (optional, default is null)

Generates a random date between the two values
Both ```min``` and ```max```
can be represented by any string that the ```Date.parse()```_ method
accepts.

By default the output uses `Date.toString()`_. Alternatively the output
can be formatted using a format string provided by fecha. For a complete
list of formatting options see https://github.com/taylorhakes/fecha

.. code:: js

   // Generate a random date between midnight 2010-01-01 and midnight 2015-01-01
   {{date '2010' '2015'}} // Thu Jan 26 2012 03:04:15 GMT+0000 (GMT)

   // Generate a random date between more specific values
   {{date '2015-06-01' '2015-06-30'}} // Mon Jun 22 2015 01:02:36 GMT+0100 (BST)

   // Generate a random date between even more specific values (inc. time)
   {{date '2015-06-01T09:00' '2015-06-30T17:30'}} // Sun Jun 07 2015 23:55:16 GMT+0100 (BST)

   // Format the date using fecha
   {{date '2010' '2015' 'DD/MM/YYYY'}} // 16/06/2012

   // Format the date using a unix timestamp
   {{date '2010' '2015' 'unix'}} // 1340417344

Time
~~~~

``{{time min max [format]}}``

-  ``min`` Minimum value (required)
-  ``max`` Maximum value (required)
-  ``format`` Formatting string (optional, default is null)

This is a shorthand helper for generating the time portion of a date,
without needing to put the full date into the min and max values. Both
``min`` and ``max`` can be represented by any string in the 24h format
``HH:mm:ss``, for example ``17:48:34.``, or if you want to ignore
seconds: ``17:48``

By default the output uses ``HH:mm``. Alternatively the output can be
formatted using a format string provided by fecha. For a complete list
of formatting options see https://github.com/taylorhakes/fecha

.. code:: js

   // Generate a random time
   {{time '09:00' '17:30'}} // 14:08

   // Format the time using fecha
   {{time '09:00' '17:30' 'h:mm a'}} // 2:08 pm

Boolean
~~~~~~~

``{{boolean}}``

Generates a random ``true`` or ``false`` value.

Title
~~~~~

``{{title}}``

Generates a random title prefix, from a predefined list, such as “Mr”,
“Mrs”, “Dr”, etc.

First name
~~~~~~~~~~

``{{firstName}}``

Generates a random first name, from a predefined list. This helper is
kept in sync with other name-related helpers, such as username and email
- see the section on `Synchronized helpers`_ for more information.

Last name
~~~~~~~~~

``{{lastName}}``

Generates a random last name, from a predefined list. This helper is
kept in sync with other name-related helpers, such as username and email
- see the section on `Synchronized helpers`_ for more information.

Company
~~~~~~~

``{{company}}``

Generates a random company name, from a predefined list. This helper is
kept in sync with the email and domain helpers, such as username and
email - see the section on `Synchronized helpers`_ for more information.

Domain
~~~~~~

``{{domain}}``

Generates a random domain name in the format “domain.tld”, from a
predefined list. This helper is kept in sync with the company and email
helpers - see the section on `Synchronized helpers`_ for more
information.

TLD
~~~

``{{tld}}``

Generates a random top-level domain name, from a predefined list. This
helper is kept in sync with the email helper - see the section on
`Synchronized helpers`_ for more information.

Email
~~~~~

``{{email}}``

Generates a random email address. This helper is kept in sync with other
name-related helpers, such as username and email - see the section on
`Synchronized helpers`_ for more information.

Street
~~~~~~

``{{street}}``

Generates a random street name, from a predefined list.

City
~~~~

``{{city}}``

Generates a random city name, from a predefined list.

Country
~~~~~~~

``{{country}}``

Generates a random country name, from a predefined list based on `ISO
3166-1`_. 


